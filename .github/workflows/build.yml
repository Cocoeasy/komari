name: Build windows-x64-static-release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "master"
      - "v*.*.*"

permissions: write-all

env:
  VCPKG_ENABLE_METRICS: 0
  VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg/installed
  VCPKG_DEFAULT_TRIPLET: x64-windows-static-release
  VCPKGRS_TRIPLET: x64-windows-static-release
  CARGO_TERM_COLOR: always
  OPENCV_MSVC_CRT: static
  RUST_BACKTRACE: 1
  OPENCV_DISABLE_PROBES: environment,pkg_config,cmake,vcpkg_cmake

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-x86_64-pc-windows-msvc
          components: clippy, rustfmt

      - uses: cargo-bins/cargo-binstall@main

      - run: cargo binstall dioxus-cli --no-confirm

      - name: Format
        # https://github.com/DioxusLabs/dioxus/issues/3433
        # Need to add dx fmt
        run: cargo fmt --check

      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.31.6

      - uses: lukka/run-vcpkg@v11
        with:
          doNotCache: false
          runVcpkgFormatString: '[`install`, `--recurse`, `--clean-after-build`, `--debug`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`]'
          runVcpkgInstall: true

      - uses: Swatinem/rust-cache@v2

      - uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: "npm"
          cache-dependency-path: "./ui/package-lock.json"

      - name: Install NPM packages
        run: |
          cd ui
          npm install

      - uses: KyleMayes/install-llvm-action@v2
        with:
          # can't install LLVM 19
          # possibly related https://github.com/KyleMayes/install-llvm-action/issues/86
          version: "18.1.8"

      - name: Lint
        run: cargo clippy -- -D warnings

      - name: Test
        run: cargo test --verbose

      - name: Build
        shell: pwsh
        run: |
          dx build --verbose --release --package ui
          dx build --verbose --package ui

      - uses: actions/upload-artifact@v4
        with:
          name: app
          path: target/dx/ui/release/windows/app

      - uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: target/dx/ui/debug/windows/app

      - if: startsWith(github.ref, 'refs/tags/')
        run: Compress-Archive -Path target/dx/ui/release/windows/app/* -Destination app.zip

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: app.zip
