name: Build windows-x64-static-release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "master"
      - "v*.*.*"

permissions:
  contents: read

env:
  OPENCV_MSVC_CRT: static
  OPENCV_DISABLE_PROBES: environment,pkg_config,cmake,vcpkg_cmake

  VCPKG_VERSION: "2025.04.09"
  VCPKG_ENABLE_METRICS: 0
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg/installed
  VCPKG_DEFAULT_TRIPLET: x64-windows-static-release
  VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static-release
  VCPKGRS_TRIPLET: x64-windows-static-release
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

  LLVM_VERSION: "20.1.2"
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUST_BACKTRACE: 1
  RUSTC_WRAPPER: "sccache"

jobs:
  build:
    strategy:
      fail-fast: false

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: mozilla-actions/sccache-action@v0.0.9

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-x86_64-pc-windows-msvc
          components: clippy, rustfmt

      - uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Setup LLVM
        shell: pwsh
        run: choco install -y llvm --version "$env:LLVM_VERSION"

      - name: Setup vcpkg
        shell: pwsh
        run: |
          git clone https://github.com/Microsoft/vcpkg.git "$env:VCPKG_ROOT"
          cd "$env:VCPKG_ROOT"
          git fetch --all --prune --tags
          git status
          git checkout .
          git checkout "$env:VCPKG_VERSION"
          ./bootstrap-vcpkg.bat -disableMetrics

      - name: Install OpenCV
        shell: pwsh
        run: |
          cd "$env:VCPKG_ROOT"
          ./vcpkg.exe install --clean-after-build --recurse opencv4[contrib,nonfree]
          
      # - uses: arduino/setup-protoc@v3

      # - uses: cargo-bins/cargo-binstall@main

      # - run: cargo binstall dioxus-cli --no-confirm

      # - name: Format
        # https://github.com/DioxusLabs/dioxus/issues/3433
        # Need to add dx fmt
        # run: cargo fmt --check

      # - uses: lukka/get-cmake@latest
      #   with:
      #     cmakeVersion: 3.31.6

      # - uses: lukka/run-vcpkg@v11
      #   with:
      #     doNotCache: false
      #     runVcpkgFormatString: '[`install`, `--recurse`, `--clean-after-build`, `--debug`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`]'
      #     runVcpkgInstall: true

      # - uses: Swatinem/rust-cache@v2

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: latest
      #     cache: "npm"
      #     cache-dependency-path: "./ui/package-lock.json"

      # - name: Install NPM packages
      #   run: |
      #     cd ui
      #     npm install

      # - uses: KyleMayes/install-llvm-action@v2
      #   with:
      #     # can't install LLVM 19
      #     # possibly related https://github.com/KyleMayes/install-llvm-action/issues/86
      #     version: "18.1.8"

      # - name: Lint
      #   run: cargo clippy -- -D warnings

      # - name: Test
      #   run: cargo test --verbose

      # - name: Build
      #   shell: pwsh
      #   run: |
      #     dx build --verbose --release --package ui
      #     dx build --verbose --package ui

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: app
      #     path: target/dx/ui/release/windows/app

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: app-debug
      #     path: target/dx/ui/debug/windows/app

      # - if: startsWith(github.ref, 'refs/tags/')
      #   run: Compress-Archive -Path target/dx/ui/release/windows/app/* -Destination app.zip

      # - uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     draft: true
      #     files: app.zip
