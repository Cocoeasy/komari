name: komari

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
      - "v*.*.*"
    tags:
      - "v*.*.*"
    paths-ignore:
      - "**/*.md"
      - "examples/**"
      - "docs/**"
  pull_request:
    branches:
      - "master"
      - "v*.*.*"
    paths-ignore:
      - "**/*.md"
      - "examples/**"
      - "docs/**"


env:
  OPENCV_MSVC_CRT: static
  OPENCV_DISABLE_PROBES: environment,pkg_config,cmake,vcpkg_cmake

  VCPKG_VERSION: "2025.04.09"
  VCPKG_ENABLE_METRICS: 0
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg/installed
  VCPKGRS_TRIPLET: x64-windows-static

  PROTOC_VERSION: "31.1.0"
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUST_BACKTRACE: 1
  RUSTC_WRAPPER: "sccache"

permissions:
  contents: write

jobs:
  test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # https://github.com/DioxusLabs/dioxus/issues/3433
      # Need to add dx fmt
      - uses: ./.github/actions/setup
        with:
          vcpkg-version: ${{ env.VCPKG_VERSION }}
          vcpkg-root: ${{ env.VCPKG_ROOT }}
          protoc-version: ${{ env.PROTOC_VERSION }}

      - run: cargo fmt --check
      - run: cargo clippy -- -D warnings
      - run: cargo test --verbose

  build:
    runs-on: windows-latest

    strategy:
      matrix:
        type: [release, debug]
        feature: [cpu, gpu]

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup
        with:
          vcpkg-version: ${{ env.VCPKG_VERSION }}
          vcpkg-root: ${{ env.VCPKG_ROOT }}
          protoc-version: ${{ env.PROTOC_VERSION }}

      - name: Build ${{ matrix.type }} ${{ matrix.feature }}
        shell: pwsh
        run: |
          $args = "--verbose", "--package", "ui"
          if ("${{ matrix.type }}" -eq "release") {
            $args += "--release"
          }
          if ("${{ matrix.feature }}" -eq "gpu") {
            $args += "--"
            $args += "--features"
            $args += "backend/gpu"
          }
          dx build @args

      - uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.type }}-${{ matrix.feature }}
          path: target/dx/ui/${{ matrix.type }}/windows/app

      - if: startsWith(github.ref, 'refs/tags/')
        run: Compress-Archive -Path target/dx/ui/${{ matrix.type }}/windows/app/* -Destination app-${{ matrix.type }}-${{ matrix.feature }}.zip

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            app-${{ matrix.type }}-${{ matrix.feature }}.zip
